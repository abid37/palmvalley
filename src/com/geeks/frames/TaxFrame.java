/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.geeks.frames;

import com.geeks.beans.TaxBean;
import com.geeks.dao.TaxDAO;
import com.geeks.daoImp.TaxDAOImpl;
import com.geeks.daoImp.UserDAOImp;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xyz
 */
public class TaxFrame extends javax.swing.JFrame {

    /**
     * Creates new form UserDAO
     */
    public TaxFrame() throws SQLException {
        initComponents();
        setTable();
        setButtons(2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtTax = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableTaxFrame = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        comboSDay = new javax.swing.JComboBox();
        comboSMon = new javax.swing.JComboBox();
        comboSYear = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        comboEDay = new javax.swing.JComboBox();
        comboEMon = new javax.swing.JComboBox();
        comboEYear = new javax.swing.JComboBox();
        lblMsg = new javax.swing.JLabel();
        lblMsg1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtTax.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        txtTax.setText("0");
        jPanel2.add(txtTax, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 190, 310, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setText("Tax");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 190, 290, 40));

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnUpdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 420, 150, -1));

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel2.add(btnAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 420, 150, -1));

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        jPanel2.add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(1260, 420, 150, -1));

        tableTaxFrame.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tableTaxFrame.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableTaxFrame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableTaxFrameMouseClicked(evt);
            }
        });
        tableTaxFrame.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableTaxFrameKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableTaxFrame);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 750, 590));

        jButton4.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jButton4.setText("< Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 180, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel8.setText("With effect from");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 260, 280, 40));

        comboSDay.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        comboSDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        comboSDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSDayActionPerformed(evt);
            }
        });
        jPanel2.add(comboSDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 260, 70, 40));

        comboSMon.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        comboSMon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        comboSMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSMonActionPerformed(evt);
            }
        });
        jPanel2.add(comboSMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 260, 110, 40));

        comboSYear.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        comboSYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));
        comboSYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSYearActionPerformed(evt);
            }
        });
        jPanel2.add(comboSYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 260, 100, 40));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel9.setText("Applied upto");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 330, 280, 40));

        comboEDay.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        comboEDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        comboEDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEDayActionPerformed(evt);
            }
        });
        jPanel2.add(comboEDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 330, 70, 40));

        comboEMon.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        comboEMon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" }));
        comboEMon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEMonActionPerformed(evt);
            }
        });
        jPanel2.add(comboEMon, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 330, 110, 40));

        comboEYear.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        comboEYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019", "2020" }));
        comboEYear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEYearActionPerformed(evt);
            }
        });
        jPanel2.add(comboEYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 330, 100, 40));

        lblMsg.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblMsg.setForeground(new java.awt.Color(204, 0, 51));
        jPanel2.add(lblMsg, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 530, 610, 40));

        lblMsg1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblMsg1.setForeground(new java.awt.Color(51, 255, 0));
        jPanel2.add(lblMsg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 530, 610, 40));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 1430, 740));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel4.setText("Tax Panel");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 30, -1, 40));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        addForOneUpdateForTwo(1);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        addForOneUpdateForTwo(2);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tableTaxFrameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableTaxFrameMouseClicked
        // TODO add your handling code here:
        setAllTxts();
    }//GEN-LAST:event_tableTaxFrameMouseClicked

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:
        setButtons(2);
    }//GEN-LAST:event_jPanel2MouseClicked

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        addForOneUpdateForTwo(3);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tableTaxFrameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableTaxFrameKeyReleased
        // TODO add your handling code here:
        setAllTxts();
    }//GEN-LAST:event_tableTaxFrameKeyReleased

    private void comboSYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSYearActionPerformed
        // TODO add your handling code here:
        checkDates();
    }//GEN-LAST:event_comboSYearActionPerformed

    private void comboEYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEYearActionPerformed
        // TODO add your handling code here:
        checkDates();
    }//GEN-LAST:event_comboEYearActionPerformed

    private void comboSMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSMonActionPerformed
        // TODO add your handling code here:
        checkDates();
    }//GEN-LAST:event_comboSMonActionPerformed

    private void comboEMonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEMonActionPerformed
        // TODO add your handling code here:
        checkDates();
    }//GEN-LAST:event_comboEMonActionPerformed

    private void comboSDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSDayActionPerformed
        // TODO add your handling code here:
        checkDates();
    }//GEN-LAST:event_comboSDayActionPerformed

    private void comboEDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEDayActionPerformed
        // TODO add your handling code here:
        checkDates();
    }//GEN-LAST:event_comboEDayActionPerformed

    private void setButtons(int val) {
        if (val == 1) {
            btnAdd.setEnabled(false);
            btnUpdate.setEnabled(true);
            btnDelete.setEnabled(true);
        } else {
            btnAdd.setEnabled(true);
            btnUpdate.setEnabled(false);
            btnDelete.setEnabled(false);
        }
    }

    private boolean checkDates() {
        lblMsg.setText("");
        lblMsg1.setText("");
        String days = comboSDay.getSelectedItem().toString();
        int mons = comboSMon.getSelectedIndex() + 1;
        String ms = mons + "";
        if (mons < 10) {
            ms = "0" + mons;
        }
        String years = comboSYear.getSelectedItem().toString();

        String daye = comboEDay.getSelectedItem().toString();
        int mone = comboEMon.getSelectedIndex() + 1;
        String me = mone + "";
        if (mone < 10) {
            me = "0" + mone;
        }
        String yeare = comboEYear.getSelectedItem().toString();

        String startDate = years + "-" + ms + "-" + days;
        String endDate = yeare + "-" + me + "-" + daye;

        if (Integer.parseInt(yeare) < Integer.parseInt(years)) {
            lblMsg.setText("*Future year can't be less than past year!");
        } else if (Integer.parseInt(yeare) == Integer.parseInt(years)) {
            if (mone < mons) {
                lblMsg.setText("*Future month can't be less than past month!");
            } else if (mone == mons) {
                if (Integer.parseInt(daye) < Integer.parseInt(days)) {
                    lblMsg.setText("*Future day can't be less than past day!");
                } else if (Integer.parseInt(daye) == Integer.parseInt(days)) {
                    lblMsg.setText("*Dates can't bt same");
                } else if (Integer.parseInt(daye) > Integer.parseInt(days)) {
                    lblMsg1.setText("*Dates are ok!");
                    return true;
                }
            } else if (mone > mons) {
                lblMsg1.setText("*Dates are ok!");
            }
        } else if (Integer.parseInt(yeare) > Integer.parseInt(years)) {
            lblMsg1.setText("*Dates are ok!");
        }
        return false;
    }

    public void setAllTxts() {
        setButtons(1);
        int id = (int) tableTaxFrame.getValueAt(tableTaxFrame.getSelectedRow(), 0);
        TaxBean taxBean = new TaxBean();
        taxBean.setTaxId(id);

        TaxDAO taxDAO = new TaxDAOImpl();
        ArrayList<TaxBean> list = (ArrayList<TaxBean>) taxDAO.setAllTxt(taxBean);
        for (TaxBean taxBean1 : list) {
            txtTax.setText(String.valueOf(taxBean1.getTax()));
            String sdate[] = taxBean1.getFromDate().split("-");
            comboSYear.setSelectedItem(sdate[0]);
            comboSMon.setSelectedIndex(Integer.parseInt(sdate[1]) - 1);
            comboSDay.setSelectedItem(sdate[2]);

            String edate[] = taxBean1.getToDate().split("-");
            comboEYear.setSelectedItem(edate[0]);
            comboEMon.setSelectedIndex(Integer.parseInt(edate[1]) - 1);
            comboEDay.setSelectedItem(edate[2]);

        }
    }

    private void clearAll() {
        txtTax.setText("");
    }

    public void setTable() throws SQLException {
        TaxDAO taxDAO = new TaxDAOImpl();
        tableTaxFrame.setModel(buildTableModel(taxDAO.viewAllTaxResultSet()));
    }

    public static DefaultTableModel buildTableModel(ResultSet rs) throws SQLException {
        ResultSetMetaData metaData = rs.getMetaData();
        Vector<String> columnNames = new Vector<String>();
        int columnCount = metaData.getColumnCount();
        for (int column = 1; column <= columnCount; column++) {
            columnNames.add(metaData.getColumnName(column));
        }

        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        while (rs.next()) {
            Vector<Object> vector = new Vector<Object>();
            for (int columnIndex = 1; columnIndex <= columnCount; columnIndex++) {
                vector.add(rs.getObject(columnIndex));
            }
            data.add(vector);
        }
        return new DefaultTableModel(data, columnNames);
    }

    public void addForOneUpdateForTwo(int one) {
        if (checkDates()) {
            float tax = Float.parseFloat(txtTax.getText());

            String days = comboSDay.getSelectedItem().toString();
            int mons = comboSMon.getSelectedIndex() + 1;
            String ms = mons + "";
            if (mons < 10) {
                ms = "0" + mons;
            }
            String years = comboSYear.getSelectedItem().toString();
            String startDate = years + "-" + ms + "-" + days;

            String daye = comboEDay.getSelectedItem().toString();
            int mone = comboEMon.getSelectedIndex() + 1;
            String me = mone + "";
            if (mone < 10) {
                me = "0" + mone;
            }
            String yeare = comboEYear.getSelectedItem().toString();
            String endDate = yeare + "-" + me + "-" + daye;

            int createdBy = UserDAOImp.userId;

            Date d = new Date();
            SimpleDateFormat df = new SimpleDateFormat();
            df.applyPattern("yyyy-MM-dd");
            String currentDate = df.format(d);

            TaxBean taxBean = new TaxBean();
            taxBean.setTax(tax);
            taxBean.setFromDate(startDate);
            taxBean.setToDate(endDate);

            TaxDAO taxDAO = new TaxDAOImpl();
            if (one == 1) {
                taxBean.setCreatedBy(createdBy);
                taxBean.setCreatedDate(currentDate);

                if (taxDAO.addTaxDetails(taxBean) != 0) {
                    try {
                        clearAll();
                        setTable();
                        JOptionPane.showMessageDialog(this, "Tax added successfully!");
                    } catch (SQLException ex) {
                        Logger.getLogger(TaxFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to add the tax!");
                }
            } else if (one == 2) {
                int id = (int) tableTaxFrame.getValueAt(tableTaxFrame.getSelectedRow(), 0);

                taxBean.setModifiedBy(createdBy);
                taxBean.setModifiedDate(currentDate);
                taxBean.setTaxId(id);

                if (taxDAO.updateTaxDetails(taxBean) != 0) {
                    try {
                        clearAll();
                        setTable();
                        setButtons(2);
                        JOptionPane.showMessageDialog(this, "Tax updated successfully!");
                    } catch (SQLException ex) {
                        Logger.getLogger(TaxFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to update the tax!");
                }
            } else if (one == 3) {
                int id = (int) tableTaxFrame.getValueAt(tableTaxFrame.getSelectedRow(), 0);
                taxBean.setTaxId(id);
                if (taxDAO.deleteTaxDetails(taxBean) != 0) {
                    try {
                        clearAll();
                        setTable();
                        setButtons(2);
                        JOptionPane.showMessageDialog(this, "Tax deleted successfully!");
                    } catch (SQLException ex) {
                        Logger.getLogger(TaxFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete the tax!");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Check dates first!");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new TaxFrame().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TaxFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox comboEDay;
    private javax.swing.JComboBox comboEMon;
    private javax.swing.JComboBox comboEYear;
    private javax.swing.JComboBox comboSDay;
    private javax.swing.JComboBox comboSMon;
    private javax.swing.JComboBox comboSYear;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JLabel lblMsg1;
    private javax.swing.JTable tableTaxFrame;
    private javax.swing.JTextField txtTax;
    // End of variables declaration//GEN-END:variables

}
